// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider     = "mysql"
    url          = env("DATABASE_URL")
    relationMode = "prisma"
}

model Example {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

// Necessary for Next auth
model Account {
    id                String  @id @default(cuid())
    userId            String
    type              String
    provider          String
    providerAccountId String
    refresh_token     String? @db.Text
    access_token      String? @db.Text
    expires_at        Int?
    token_type        String?
    scope             String?
    id_token          String? // @db.Text
    session_state     String?
    user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@unique([provider, providerAccountId])
    @@index([userId])
}

model Session {
    id           String   @id @default(cuid())
    sessionToken String   @unique
    userId       String
    expires      DateTime
    user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@index([userId])
}

model User {
    id             String    @id @default(cuid())
    name           String?
    email          String?   @unique
    emailVerified  DateTime?
    mobileNumber   String?   @unique
    mobileVerified DateTime?
    image          String?
    accounts       Account[]
    sessions       Session[]
    Creator        Creator?  @relation(fields: [creatorId], references: [id])
    creatorId      String?
    Chats          Chats[]

    @@index([creatorId])
}

model VerificationToken {
    identifier String
    token      String   @unique
    expires    DateTime

    @@unique([identifier, token])
}

model Rooms {
    id         String   @id @default(cuid())
    firstUser  String
    secondUser String
    startedAt  DateTime @default(now())
}

model Creator {
    id        String   @id @default(cuid())
    userId    String   @unique
    updatedAt DateTime @updatedAt
    available Boolean  @default(false)
    users     User[]
}

model Chats {
    id      String   @id @default(cuid())
    roomId  String
    userId  String
    user    User     @relation(fields: [userId], references: [id])
    message String
    sentAt  DateTime @default(now())

    @@index([userId])
}
